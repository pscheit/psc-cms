Compiler kram

Jede klasse kann interface compilable implementieren:

funktion compile()

der Klasse generiert dann z.b. die Daten die kompiliert werden
die compile() funktion wird vom compiler auf einer kopie der Klasse in bin aufgerufen

Klasse Code:: hilft dann dabei dort dynamische Sachen reinzuschreiben. So könnte man z.b. das Datenbankmodell folgendermaßen Cachen:

Datenmodell::compile() {
  macht init()
  und ruft dann
  
  Code::writeVar($this->data, 'data')

  diese Funktion schreibt dann in die schon kopierte Klasse nach bin den inhalt von $this->data als PHP-Code in die variable data,
}


um überhaupt die Klassen zu finden, die kompiliert werden müssen, müssen alle PHP dateien im src Verzeichnis gescannt werden
Klassen die kompiliert werden, sollten in eine einfache Datei mit namen in bin geschrieben werden, damit der AutoLoader sich nicht einen Wolf
suchen muss, sondern quasi schon weiß, dass es eine kompilierte Version der Klasse gibt.
In dieser Datei ist dann am besten direkt auch der Pfad zur Klasse definiert, damit man sich einmal diese Pfad-Suche erspart.
=> compile-index
h
