<?php

namespace Psc\CMS;

/**
 * @group class:Psc\CMS\EntityMeta
 */
class EntityMetaWithPropertyTest extends \Psc\Code\Test\Base {
  
  protected $entityMeta;
  
  public function setUp() {
    $this->chainClass = 'Psc\CMS\EntityMeta';
    parent::setUp();
    //$this->classMetadata = $this->getMock('Doctrine\ORM\Mapping\ClassMetadata', array('getIdentifierFieldNames'), array('Psc\Doctrine\TestEntitites\Article'));
    //$this->classMetadata->expects($this->any())->method('getIdentifierFieldNames')->will($this->returnValue(array('id')));
    //$this->entityMeta = new EntityMeta('Psc\Doctrine\TestEntities\Article', $this->classMetadata, 'Artikel');
    $this->entityMeta = $this->getEntityMeta('Psc\Doctrine\TestEntities\Article');
    $this->entityMeta->setLabel('Artikel');
    
    $this->entity = current($this->loadTestEntities('articles'));
  }

  public function testAcceptance() {
    $property = $this->entityMeta->getPropertyMeta('content');
    
    $this->assertEquals('content',$property->getName());
    $this->assertEquals('MarkupText',$property->getType()->getName());
    $this->assertEquals('Content',$property->getLabel()); // solange der labeler das nicht anders errät
  }

  public function testIdentifierPropertySetsIsAutogeneratedValue() {
    $identifier = $this->entityMeta->getIdentifier();
    
    $this->assertEquals('id', $identifier->getName());
    $this->assertTrue($identifier->isAutogeneratedValue());
  }
  
  public function testIdentifierProperty_isAlsoSetWithNativeGetPropertyMetaFunction() {
    $identifier = $this->entityMeta->getPropertyMeta('id');
    
    $this->assertEquals('id', $identifier->getName());
    $this->assertTrue($identifier->isAutogeneratedValue());
  }
  
  public function testSetPropertiesHints() {
    $this->entityMeta->setPropertiesHints(array(
      'tags'=>$tagsHint = 'Schlagworte des Artikels. Es ist möglich mehrere anzugeben.',
      'title'=>$titleHint = 'Die Überschrift (sollte möglichst prägnant sein)'
    ));
    
    $this->assertEquals($tagsHint,$this->entityMeta->getPropertyMeta('tags')->getHint());
    $this->assertEquals($titleHint,$this->entityMeta->getPropertyMeta('title')->getHint());
  }
}
?>