<?php

namespace Proxies\__CG__\Psc\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Page extends \Psc\Entities\Page implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function updateTimestamps()
    {
        $this->__load();
        return parent::updateTimestamps();
    }

    public function getContextLabel($context = 'default')
    {
        $this->__load();
        return parent::getContextLabel($context);
    }

    public function getEntityName()
    {
        $this->__load();
        return parent::getEntityName();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getIdentifier()
    {
        $this->__load();
        return parent::getIdentifier();
    }

    public function setIdentifier($id)
    {
        $this->__load();
        return parent::setIdentifier($id);
    }

    public function getSlug()
    {
        $this->__load();
        return parent::getSlug();
    }

    public function setSlug($slug)
    {
        $this->__load();
        return parent::setSlug($slug);
    }

    public function getActive()
    {
        $this->__load();
        return parent::getActive();
    }

    public function setActive($active)
    {
        $this->__load();
        return parent::setActive($active);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setCreated(\Webforge\Common\DateTime\DateTime $created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getModified()
    {
        $this->__load();
        return parent::getModified();
    }

    public function setModified(\Webforge\Common\DateTime\DateTime $modified = NULL)
    {
        $this->__load();
        return parent::setModified($modified);
    }

    public function getNavigationNodes()
    {
        $this->__load();
        return parent::getNavigationNodes();
    }

    public function setNavigationNodes(\Doctrine\Common\Collections\Collection $navigationNodes)
    {
        $this->__load();
        return parent::setNavigationNodes($navigationNodes);
    }

    public function addNavigationNode(\Psc\Entities\NavigationNode $navigationNode)
    {
        $this->__load();
        return parent::addNavigationNode($navigationNode);
    }

    public function removeNavigationNode(\Psc\Entities\NavigationNode $navigationNode)
    {
        $this->__load();
        return parent::removeNavigationNode($navigationNode);
    }

    public function hasNavigationNode(\Psc\Entities\NavigationNode $navigationNode)
    {
        $this->__load();
        return parent::hasNavigationNode($navigationNode);
    }

    public function getContentStreams()
    {
        $this->__load();
        return parent::getContentStreams();
    }

    public function setContentStreams(\Doctrine\Common\Collections\Collection $contentStreams)
    {
        $this->__load();
        return parent::setContentStreams($contentStreams);
    }

    public function addContentStream(\Psc\Entities\ContentStream\ContentStream $contentStream)
    {
        $this->__load();
        return parent::addContentStream($contentStream);
    }

    public function removeContentStream(\Psc\Entities\ContentStream\ContentStream $contentStream)
    {
        $this->__load();
        return parent::removeContentStream($contentStream);
    }

    public function hasContentStream(\Psc\Entities\ContentStream\ContentStream $contentStream)
    {
        $this->__load();
        return parent::hasContentStream($contentStream);
    }

    public function onPrePersist()
    {
        $this->__load();
        return parent::onPrePersist();
    }

    public function getContentStream()
    {
        $this->__load();
        return parent::getContentStream();
    }

    public function getContentStreamsByLocale($revision = 'default')
    {
        $this->__load();
        return parent::getContentStreamsByLocale($revision);
    }

    public function getContentStreamByLocale($locale, $revision = 'default')
    {
        $this->__load();
        return parent::getContentStreamByLocale($locale, $revision);
    }

    public function getContentStreamsByRevision($revision = 'default')
    {
        $this->__load();
        return parent::getContentStreamsByRevision($revision);
    }

    public function getPrimaryNavigationNode()
    {
        $this->__load();
        return parent::getPrimaryNavigationNode();
    }

    public function isActive()
    {
        $this->__load();
        return parent::isActive();
    }

    public function getButtonRightIcon($context = 'default')
    {
        $this->__load();
        return parent::getButtonRightIcon($context);
    }

    public function getButtonLeftIcon($context = 'default')
    {
        $this->__load();
        return parent::getButtonLeftIcon($context);
    }

    public function export()
    {
        $this->__load();
        return parent::export();
    }

    public function equals(\Psc\Doctrine\Entity $otherEntity = NULL)
    {
        $this->__load();
        return parent::equals($otherEntity);
    }

    public function compareTo($other)
    {
        $this->__load();
        return parent::compareTo($other);
    }

    public function isNew()
    {
        $this->__load();
        return parent::isNew();
    }

    public function getEntityLabel()
    {
        $this->__load();
        return parent::getEntityLabel();
    }

    public function callSetter($field, $value)
    {
        $this->__load();
        return parent::callSetter($field, $value);
    }

    public function callGetter($field)
    {
        $this->__load();
        return parent::callGetter($field);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'slug', 'active', 'created', 'modified', 'navigationNodes', 'contentStreams');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}